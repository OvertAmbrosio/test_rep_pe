{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos Web\\\\test_rep_pe\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'semantic-ui-css/semantic.min.css';\nimport { Modal, Button, Icon } from 'semantic-ui-react';\nimport SmallImage from './SmallImage.png';\nimport LargeImage from './LargeImage.png';\nimport './styles.css';\nexport default (() => __jsx(\"div\", {\n  className: \"centered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(Icon, {\n  size: \"massive\",\n  name: \"world\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"separator\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), __jsx(Modal, {\n  trigger: __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Show Modal\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(Modal.Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"publicPath\"), \" should be set to \", __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"/_next/static/\")), __jsx(Modal.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(Modal.Description, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Larger content should be still availble as a fallback to\", ' ', __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"fileLoader\"), \" but it should not polute\", ' ', __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"/.next/static/css\"), \" folder. You should see two images below. One, smaller, loaded as data url, and one, bigger, loaded via url.\")), __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, __jsx(\"img\", {\n  src: SmallImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"A small image should be loaded as data url:\", ' ', __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, SmallImage.substr(0, 100), \"...\"))), __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"img\", {\n  src: LargeImage,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"A large image should be loaded as a url: \", __jsx(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, LargeImage))), __jsx(\"p\", {\n  className: \"border\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"You should also still be able to load regular css. This text should have border.\")))))));","map":{"version":3,"sources":["D:\\Proyectos Web\\test_rep_pe\\pages\\index.js"],"names":["Modal","Button","Icon","SmallImage","LargeImage","substr"],"mappings":";;;AAAA,OAAO,kCAAP;AACA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,cAAP;AAEA,gBAAe,MACb;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,IAAI,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,MAAC,KAAD;AAAO,EAAA,OAAO,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,wBACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADvC,CADF,EAIE,MAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD,CAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAC2D,GAD3D,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,+BAE+C,GAF/C,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,iHADF,CADF,EAUE;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC8C,GAD9C,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,UAAU,CAACE,MAAX,CAAkB,CAAlB,EAAqB,GAArB,CAAL,QAFF,CAFF,CAVF,EAkBE;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAC2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,UAAL,CAD3C,CAFF,CAlBF,EAwBE;AAAG,EAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAxBF,CADF,CADF,CAJF,CAHF,CADF","sourcesContent":["import 'semantic-ui-css/semantic.min.css'\nimport { Modal, Button, Icon } from 'semantic-ui-react'\n\nimport SmallImage from './SmallImage.png'\nimport LargeImage from './LargeImage.png'\nimport './styles.css'\n\nexport default () => (\n  <div className='centered'>\n    <Icon size='massive' name='world' />\n    <div className='separator' />\n    <Modal trigger={<Button>Show Modal</Button>}>\n      <Modal.Header>\n        <em>publicPath</em> should be set to <em>/_next/static/</em>\n      </Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <div className='wrapper'>\n            <div className='row'>\n              <p>\n                Larger content should be still availble as a fallback to{' '}\n                <em>fileLoader</em> but it should not polute{' '}\n                <em>/.next/static/css</em> folder. You should see two images\n                below. One, smaller, loaded as data url, and one, bigger, loaded\n                via url.\n              </p>\n            </div>\n            <div className='row'>\n              <img src={SmallImage} />\n              <p>\n                A small image should be loaded as data url:{' '}\n                <em>{SmallImage.substr(0, 100)}...</em>\n              </p>\n            </div>\n\n            <div className='row'>\n              <img src={LargeImage} />\n              <p>\n                A large image should be loaded as a url: <em>{LargeImage}</em>\n              </p>\n            </div>\n            <p className='border'>\n              You should also still be able to load regular css. This text\n              should have border.\n            </p>\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  </div>\n)\n"]},"metadata":{},"sourceType":"module"}